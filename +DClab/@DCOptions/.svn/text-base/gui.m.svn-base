function objOut = gui(obj,modal)
%
% open DCOptions GUI.  Build/edit DCOptions
%
% One exception, the object passed out of the function has the same
% guihandle property as the object passed into it, even if the user resorts
% to defaults. This facilitates interfacing with the main gui.


nout = nargout;

ss = get(0,'screensize');
posx = max([0,ss(3)-670])/2;
posy = max([0,ss(4)-450])/2;

%figure
figH = figure('MenuBar','none',...
              'NumberTitle','off',...
              'name','DCOptions',...
              'ToolBar','none',...
              'resize','off',...
              'dockcontrols','off',...
              'closerequestfcn','uiresume(gcf)',...
              'position',[posx posy 670 470]);
if nargin==2 && strcmp(modal,'modal')
    set(figH,'WindowStyle','modal')
end

%Buttons
uicontrol(figH,'style','pushbutton',...
    'string','Resort to Defaults',...
    'callback',{@local_setForm,DClab.DCOptions},...
    'position',[15 10 125 20],...
    'selected','off');
uicontrol(figH,'style','pushbutton',...
    'string','Help',...
    'callback','doc(''obj_dcopt'')',...
    'position',[155 10 50 20],...
    'selected','off');
uicontrol(figH,'style','pushbutton',...
    'string','OK',...
    'callback','uiresume(gcf)',...
    'position',[540 10 40 20 ],...
    'selected','off');
uicontrol(figH,'style','pushbutton',...
    'string','Cancel',...
    'callback','setappdata(gcf,''opt'',getappdata(gcf,''original''));uiresume(gcf)',...
    'position',[595 10 60 20],...
    'selected','off');

%tabs
tabg = uitabgroup(figH,'BackgroundColor',[0.8 0.8 0.8]);
tab2 = uitab(tabg,'title','Fitting');
tab3 = uitab(tabg,'title','Optimization');
tab1 = uitab(tabg,'title','Display');

%--------------fitting-------------------------

uicontrol(tab2,'style','text',...
    'string','Fitting',...
    'fontsize',16,...
    'horizontalalignment','left',...
    'backgroundcolor',[0.8 0.8 0.8],...
    'position',[20 410 70 25]);

iterpan = uipanel('title','Iterations',...
    'parent',tab2,...
    'units','pixels',...
    'position',[20 300 330 110]);
uicontrol(iterpan,'style','text',...
    'string','Max iterations:',...
    'horizontalalignment','left',...
    'position',[20 60 100 20]);
uicontrol(iterpan,'style','text',...
    'horizontalalignment','left',...
    'string','Min iterations:',...
    'position',[20 32 100 20]);
uicontrol(iterpan,'style','text',...
    'horizontalalignment','left',...
    'string','Required # of consecutive successes:',...
    'position',[20 5 245 20]);
maxFitIter = uicontrol(iterpan,'style','edit',...
    'position',[130 63 40 20],...
    'callback',{@local_generic_set,'maxFitIter'});
minFitIter = uicontrol(iterpan,'style','edit',...
    'position',[130 35 40 20],...
    'callback',{@local_generic_set,'minFitIter'});
nSuccessIter = uicontrol(iterpan,'style','edit',...
    'position',[275 8 40 20],...
    'callback',{@local_generic_set,'nSuccessIter'});


pointpan = uipanel('title','Points',...
    'parent',tab2,...
    'units','pixels',...
    'position',[20 200 330 80]);
uicontrol(pointpan,'style','text',...
    'string','Maximum Points:',...
    'horizontalalignment','left',...
    'position',[20 35 120 20]);
maxPnts = uicontrol(pointpan,'style','edit',...
    'position',[150 38 60 20],...
    'callback',{@local_generic_set,'maxPnts'});
useAllPnts = uicontrol(pointpan,'style','checkbox',...
    'string','  Use All Computed Points',...
    'position',[20 10 250 20]);


tolpan = uipanel('title','Tolerences',...
    'parent',tab2,...
    'units','pixels',...
    'position',[20 130 330 50]);
uicontrol(tolpan,'style','text',...
    'string','Tol. to normalized fit convergence:',...
    'horizontalalignment','left',...
    'position',[20 7 270 20]);
tol = uicontrol(tolpan,'style','edit',...
    'position',[250 10 70 20],...
    'callback',{@local_generic_set,'tol'});

parpan = uipanel('title','Parallelization',...
    'parent',tab2,...
    'units','pixels',...
    'position',[370 40 280 50]);
uicontrol(parpan,'style','text',...
    'string','Number of Computers: ',...
    'horizontalalignment','left',...
    'position',[20 7 170 20]);
nComp = uicontrol(parpan,'style','edit',...
    'position',[200 10 40 20],...
    'callback',{@local_generic_set,'nComp'});


actpan = uipanel('title','Active Parameters',...
    'parent',tab2,...
    'units','pixels',...
    'position',[370 103 280 70]);
uicontrol(actpan,'style','text',...
    'string','# of points to generate:',...
    'horizontalalignment','left',...
    'position',[20 30 170 20]);
uicontrol(actpan,'style','text',...
    'string','Cut off level:',...
    'horizontalalignment','left',...
    'position',[20 5 100 20]);
nPnts4ActiveParamM = uicontrol(actpan,'style','edit',...
    'position',[200 33 60 20],...
    'callback',{@local_generic_set,'nPnts4ActiveParamM'});
activeParamCutOff = uicontrol(actpan,'style','edit',...
    'position',[130 8 80 20],...
    'callback',{@local_generic_set,'activeParamCutOff'});

validation = uipanel('title','Validation',...
    'parent',tab2,...
    'units','pixels',...
    'position',[20 40 330 70]);
uicontrol(validation,'style','text',...
    'string','# of validation pnts to generate:',...
    'horizontalalignment','left',...
    'position',[20 30 230 20]);
uicontrol(validation,'style','text',...
    'string','# of local searches to validate:',...
    'horizontalalignment','left',...
    'position',[20 5 200 20]);
nPnts4ValidationM = uicontrol(validation,'style','edit',...
    'position',[230 33 60 20],...
    'callback',{@local_generic_set,'nPnts4ValidationM'});
nLocalValidationSearches = uicontrol(validation,'style','edit',...
    'position',[230 8 60 20],...
    'callback',{@local_generic_set,'nLocalValidationSearches'});

transpan = uipanel('title','Transformations',...
    'parent',tab2,...
    'units','pixels',...
    'position',[370 186 280 110]);
uicontrol(transpan,'style','text',...
    'string','Constraints:',...
    'horizontalalignment','left',...
    'position',[15 35 100 20]);
uipanel('parent',transpan,...
    'units','pixels',...
    'position',[5 33 270 1]);
uicontrol(transpan,'style','text',...
    'string','Transform:',...
    'horizontalalignment','left',...
    'position',[20 5 100 20]);
uicontrol(transpan,'style','text',...
    'string','linX linY',...
    'horizontalalignment','left',...
    'position',[105 60 30 30]);
uipanel('parent',transpan,...
    'units','pixels',...
    'position',[137 5 1 90]);
uicontrol(transpan,'style','text',...
    'string','logX linY',...
    'horizontalalignment','center',...
    'position',[143 60 30 30]);
uipanel('parent',transpan,...
    'units','pixels',...
    'position',[177 5 1 90]);
uicontrol(transpan,'style','text',...
    'string','linX logY',...
    'horizontalalignment','center',...
    'position',[183 60 30 30]);
uipanel('parent',transpan,...
    'units','pixels',...
    'position',[217 5 1 90]);
uicontrol(transpan,'style','text',...
    'string','logX logY',...
    'horizontalalignment','center',...
    'position',[223 60 30 30]);
constraints1 = uicontrol(transpan,'style','checkbox',...
    'position',[108 37 20 20],...
    'callback',{@local_transforms,'constraints',1});
constraints2 = uicontrol(transpan,'style','checkbox',...
    'position',[148 37 20 20],...
    'callback',{@local_transforms,'constraints',2});
constraints3 = uicontrol(transpan,'style','checkbox',...
    'position',[188 37 20 20],...
    'callback',{@local_transforms,'constraints',3});
constraints4 = uicontrol(transpan,'style','checkbox',...
    'position',[228 37 20 20],...
    'callback',{@local_transforms,'constraints',4});
trans1 = uicontrol(transpan,'style','checkbox',...
    'position',[108 12 20 20],...
    'callback',{@local_transforms,'trans',1});
trans2 = uicontrol(transpan,'style','checkbox',...
    'position',[148 12 20 20],...
    'callback',{@local_transforms,'trans',2});
trans3 = uicontrol(transpan,'style','checkbox',...
    'position',[188 12 20 20],...
    'callback',{@local_transforms,'trans',3});
trans4 = uicontrol(transpan,'style','checkbox',...
    'position',[228 12 20 20],...
    'callback',{@local_transforms,'trans',4});



typepan = uipanel('title','Fitting Type',...
    'parent',tab2,...
    'units','pixels',...
    'position',[370 309 280 130]);
uicontrol(typepan,'style','text',...
    'string','Surface Type:',...
    'horizontalalignment','left',...
    'position',[20 80 100 20]);
uicontrol(typepan,'style','text',...
    'string','Norm:',...
    'horizontalalignment','left',...
    'position',[20 45 50 20]);
denSwingTxt = uicontrol(typepan,'style','text',...
    'string','Maximum Denominator Swing:',...
    'horizontalalignment','left',...
    'position',[20 10 200 20]);
surfaceType = uicontrol(typepan,'style','popupmenu',...
    'position',[130 83 130 20],...
    'string',{'QuadSurf','LinSurf','QuadOverQuad'},...
    'callback',{@local_pulldowns,'surfaceType'});
fitNorm = uicontrol(typepan,'style','popupmenu',...
    'position',[80 48 60 20],...
    'string',{'2','Inf'},...
    'callback',{@local_pulldowns,'fitNorm'});
maxDenSwing = uicontrol(typepan,'style','edit',...
    'position',[225 15 40 20],...
    'callback',{@local_generic_set,'maxDenSwing'});


%--------display-----------

uicontrol(tab1,'style','text',...
    'string','Display',...
    'fontsize',16,...
    'horizontalalignment','left',...
    'backgroundcolor',[0.8 0.8 0.8],...
    'position',[20 410 100 25]);

disppan = uipanel('title','',...
    'parent',tab1,...
    'units','pixels',...
    'position',[20 280 330 120]);
uicontrol(disppan,'style','text',...
    'string','Command Line Display:',...
    'Horizontalalignment','left',...
    'position',[20 80 220 20]);
display = uicontrol(disppan,'style','popupmenu',...
    'position',[180 85 70 20],...
    'string',{' off',' final',' notify',' iter',' all',' ALL'},...
    'callback',{@local_pulldowns,'display'});
plotFitProg = uicontrol(disppan,'style','checkbox',...
    'string',' Process Plots',...
    'position',[20 52 220 20],...
    'callback',{@local_checkbox_normal,'plotFitProg'});
stopGUI = uicontrol(disppan,'style','checkbox',...
    'string',' Stop Process Button',...
    'position',[20 15 200 20],...
    'callback',{@local_checkbox_normal,'stopGui'});


%-----------Optimization---------
uicontrol(tab3,'style','text',...
    'string','Optimization',...
    'fontsize',16,...
    'horizontalalignment','left',...
    'backgroundcolor',[0.8 0.8 0.8],...
    'position',[20 410 200 25]);

boundspan = uipanel('title','Bounds',...
    'parent',tab3,...
    'units','pixels',...
    'position',[20 270 330 140]);
omitInnerBound = uicontrol(boundspan,'style','checkbox',...
    'string',' Calculate Inner Bound(s)',...
    'horizontalalignment','left',...
    'position',[20 90 200 20],...
    'callback',{@local_checkbox_inverse,'omitInnerBound'});
omitOuterBound = uicontrol(boundspan,'style','checkbox',...
    'horizontalalignment','left',...
    'string',' Calculate Outer Bound(s)',...
    'position',[20 52 200 20],...
    'callback',{@local_checkbox_inverse,'omitOuterBound'});
uicontrol(boundspan,'style','text',...
    'horizontalalignment','left',...
    'position',[20,10,250,20],...
    'string','Maximum Branch & Bound iterations:');
maxBranchBoundIter = uicontrol(boundspan,'style','edit',...
    'string',' Perform a Branch and Bound Algorithm',...
    'position',[260 15 40 20],...
    'callback',{@local_generic_set,'maxBranchBoundIter'});

restartpan = uipanel('title','Restarts',...
    'parent',tab3,...
    'units','pixels',...
    'position',[370 360 280 50]);
uicontrol(restartpan,'style','text',...
    'string','Number of restarts:',...
    'horizontalalignment','left',...
    'position',[20 7 150 20]);
nRestart = uicontrol(restartpan,'style','edit',...
    'position',[180 10 40 20],...
    'callback',{@local_generic_set,'nRestart'});

magObjpan = uipanel('title','Tolerence',...
    'parent',tab3,...
    'units','pixels',...
    'position',[370 250 280 100]);
uicontrol(magObjpan,'style','text',...
    'string','Objective Function Convergence Tolerence:',...
    'horizontalalignment','left',...
    'position',[20 47 180 30]);
tolFun = uicontrol(magObjpan,'style','edit',...
    'position',[180 50 80 20],...
    'callback',{@local_generic_set,'tolFun'});
uicontrol(magObjpan,'style','text',...
    'string','Branch and Bound Convergence Tolerence:',...
    'horizontalalignment','left',...
    'position',[20 7 180 30]);
bbTermTol = uicontrol(magObjpan,'style','edit',...
    'position',[180 10 80 20],...
    'callback',{@local_generic_set,'bbTermTol'});

paramOptpan = uipanel('title','Parameter Optimization',...
    'parent',tab3,...
    'units','pixels',...
    'position',[20 210 330 50]);
uicontrol(paramOptpan,'style','text',...
    'string','Norm:',...
    'horizontalalignment','left',...
    'position',[20 7 50 15]);
paramOptimObjectiveFctnNorm = uicontrol(paramOptpan,'style','popupmenu',...
    'position',[80 10 50 20],...
    'string',{'two','one','inf'},...
    'callback',{@local_pulldowns,'paramOptimObjectiveFctnNorm'});



%--------save handles-------------
handles.fig = figH;
handles.nComp = nComp;
handles.stopGui = stopGUI;
handles.display = display;
handles.surfaceType = surfaceType;
handles.nRestart = nRestart;
handles.plotFitProg = plotFitProg;
handles.omitInnerBound = omitInnerBound;
handles.omitOuterBound = omitOuterBound;
handles.maxBranchBoundIter = maxBranchBoundIter;
handles.constraints = [constraints1 constraints2 constraints3 constraints4];
handles.fitNorm = fitNorm;
handles.maxPnts = maxPnts;
handles.maxFitIter = maxFitIter;
handles.minFitIter = minFitIter;
handles.nSuccessIter = nSuccessIter;
handles.nPnts4ActiveParamM = nPnts4ActiveParamM;
handles.tol = tol;
handles.activeParamCutOff = activeParamCutOff;
handles.tolFun = tolFun;
handles.trans = [trans1 trans2 trans3 trans4];
handles.useAllPnts = useAllPnts;
handles.denSwingTxt = denSwingTxt;
handles.maxDenSwing = maxDenSwing;
handles.nPnts4ValidationM = nPnts4ValidationM;
handles.nLocalValidationSearches = nLocalValidationSearches;
handles.bbTermTol = bbTermTol;
handles.paramOptimObjectiveFctnNorm = paramOptimObjectiveFctnNorm;

setappdata(figH,'handles',handles);
setappdata(figH,'nout',nout);
setappdata(figH,'isSaved',0);
setappdata(figH,'original',obj);

local_setForm([],[],obj);

uiwait(figH);
objOut = getappdata(figH,'opt');
objOut.guihandle = obj.guihandle; %DCOptions/gui should not modify this property

delete(figH);


%-------------------------------------------
%-----------import data---------------------
function local_setForm(varargin)

opt = varargin{3};

handles = getappdata(gcf,'handles');

%display
switch opt.display
    case 'off'
        set(handles.display,'value',1);
    case 'final'
        set(handles.display,'value',2);
    case 'notify'
        set(handles.display,'value',3);
    case 'iter'
        set(handles.display,'value',4);
    case 'all'
        set(handles.display,'value',5);
    case 'ALL'
        set(handles.display,'value',6);
end
%plot
switch opt.plotFitProgress
    case 'off'
        set(handles.plotFitProgress,'value',0);
    case 'on'
        set(handles.plotFitProgress,'value',1);
end
%stopGui
switch opt.stopGui
    case 'off'
        set(handles.stopGui,'value',0);
    case 'on'
        set(handles.stopGui,'value',1);
end

%maxFitIter
set(handles.maxFitIter,'string',num2str(opt.maxFitIter));
%minFitIter
set(handles.minFitIter,'string',num2str(opt.minFitIter));
%NsuccessIter
set(handles.nSuccessIter,'string',num2str(opt.nSuccessIter));

%maxPnts
set(handles.maxPnts,'string',num2str(opt.maxPnts));
%useAllPnts
set(handles.useAllPnts,'value',opt.useAllPnts);

%tol
set(handles.tol,'string',num2str(opt.tol));

%numComp
set(handles.nComp,'string',num2str(opt.nComp));

%surfaceType
switch opt.surfaceType
    case 'QuadSurf'
        set(handles.surfaceType,'value',1);
        flipDen(0);
    case 'LinSurf'
        set(handles.surfaceType,'value',2);
        flipDen(0);
    case 'QuadOverQuad'
        set(handles.surfaceType,'value',3);
        flipDen(1);
end
%fitNorm
switch opt.fitNorm
    case 2
        set(handles.fitNorm,'value',1);
    case inf
        set(handles.fitNorm,'value',2);
end
%maxDenSwing
set(handles.maxDenSwing,'string',num2str(opt.maxDenSwing));

%numPnts4ActiveParamM
set(handles.nPnts4ActiveParamM,'string',num2str(opt.nPnts4ActiveParamM));
%activeParamFunTol
set(handles.activeParamCutOff,'string',num2str(opt.activeParamCutOff));

%nPnts4ValidationM
set(handles.nPnts4ValidationM,'string',num2str(opt.nPnts4ValidationM));
%nLocalValidationSearches
set(handles.nLocalValidationSearches,'string',num2str(opt.nLocalValidationSearches));

%omitInnerBound
set(handles.omitInnerBound,'value',~opt.omitInnerBound);
%omitOuterBound
set(handles.omitOuterBound,'value',~opt.omitOuterBound);
%maxBranchBoundIter
set(handles.maxBranchBoundIter,'string',num2str(opt.maxBranchBoundIter));

%nRestart
set(handles.nRestart,'string',num2str(opt.nRestart));

%magObjectFunTol
set(handles.tolFun,'string',num2str(opt.tolFun));
%bbTermTol
set(handles.bbTermTol,'string',num2str(opt.bbTermTol));


%constraints
set(handles.constraints(1),'value',opt.constraints(1));
set(handles.constraints(2),'value',opt.constraints(2));
set(handles.constraints(3),'value',opt.constraints(3));
set(handles.constraints(4),'value',opt.constraints(4));

%trans
if any(strcmp('linXlinY',opt.trans))
    set(handles.trans(1),'value',1);
else
    set(handles.trans(1),'value',0);
end
if any(strcmp('logXlinY',opt.trans))
    set(handles.trans(2),'value',1);
else
    set(handles.trans(2),'value',0);
end
if any(strcmp('linXlogY',opt.trans))
    set(handles.trans(3),'value',1);
else
    set(handles.trans(3),'value',0);
end
if any(strcmp('logXlogY',opt.trans))
    set(handles.trans(4),'value',1);
else
    set(handles.trans(4),'value',0);
end

%paramOptimFctnNorm
switch opt.paramOptimObjectiveFctnNorm
    case 'two'
        set(handles.paramOptimObjectiveFctnNorm,'value',1)
    case 'one'
        set(handles.paramOptimObjectiveFctnNorm,'value',2)
    case 'inf'
        set(handles.paramOptimObjectiveFctnNorm,'value',3)
end

setappdata(gcf,'opt',opt);

%-----------------------------------------------
%----------BEGIN SET CALLBACKS------------------

%----generic----
function local_generic_set(varargin)
obj = varargin{1};
prop = varargin{3};
opt = getappdata(gcf,'opt');

try
    try
        a = eval(get(obj,'string'));
    catch
        a = get(obj,'string');
    end
    set(opt,prop,a);
    setappdata(gcf,'isSaved',1);
catch
    msgbox('Invalid Entry: Option was not modified','Error','Error','modal');
    set(obj,'ForegroundColor',[1 0 0]);
    return
end

%change color to black:
set(obj,'ForegroundColor',[0 0 0]);
setappdata(gcf,'opt',opt);


%----checkbox normal----
function local_checkbox_normal(varargin)
obj = varargin{1};
prop = varargin{3};

opt = getappdata(gcf,'opt');

if get(obj,'value')
    set(opt,prop,'on');
else
    set(opt,prop,'off');
end

setappdata(gcf,'opt',opt);
setappdata(gcf,'isSaved',1);


%----checkbox inverse----
function local_checkbox_inverse(varargin)
obj = varargin{1};
prop = varargin{3};

opt = getappdata(gcf,'opt');

set(opt,prop,~get(obj,'value'));

setappdata(gcf,'opt',opt);
setappdata(gcf,'isSaved',1);


%----pull-downs----
function local_pulldowns(varargin)
obj = varargin{1};
prop = varargin{3};

opt = getappdata(gcf,'opt');

switch prop
    case 'surfaceType'
        types = {'QuadSurf','LinSurf','QuadOverQuad'};
        if get(obj,'value')==3
            flipDen(1);
        else
            flipDen(0);
        end
    case 'fitNorm'
        types = {2, inf};
    case 'display'
        types = {'off','final','notify','iter','all','ALL'};
    case 'paramOptimObjectiveFctnNorm'
        types = {'two','one','inf'};
end
set(opt,prop,types{get(varargin{1},'value')});

setappdata(gcf,'opt',opt);
setappdata(gcf,'isSaved',1);


%----disable/enable-maxDenSwing----
function flipDen(flag)

handles = getappdata(gcf,'handles');
if flag==1
    set(handles.denSwingTxt,'enable','on');
    set(handles.maxDenSwing,'enable','on');
else
    set(handles.denSwingTxt,'enable','off');
    set(handles.maxDenSwing,'enable','off');
end



%----transformations----
function local_transforms(varargin)

prop = varargin{3};
idx = varargin{4};

handles = getappdata(gcf,'handles');
opt = getappdata(gcf,'opt');

constraints = opt.constraints;
trans = zeros(1,4);
if any(strcmp('linXlinY',opt.trans))
    trans(1) = 1;
end
if any(strcmp('logXlinY',opt.trans))
    trans(2) = 1;
end
if any(strcmp('linXlogY',opt.trans))
    trans(3) = 1;
end
if any(strcmp('logXlogY',opt.trans))
    trans(4) = 1;
end

switch prop
    case 'constraints'
        if get(handles.constraints(idx),'value')
            set(handles.trans(idx),'value',1);
            constraints(idx) = 1;
            trans(idx) = 1;
        else
            constraints(idx) = 0;
        end
    case 'trans'
        if get(handles.trans(idx),'value')
            trans(idx) = 1;
        else
            set(handles.constraints(idx),'value',0);
            constraints(idx) = 0;
            trans(idx) = 0;
        end
end

alltrans = {'linXlinY','logXlinY','linXlogY','logXlogY'};
trans = alltrans(logical(trans));

opt.constraints = constraints;
opt.trans = trans;

setappdata(gcf,'opt',opt);
setappdata(gcf,'isSaved',1);

